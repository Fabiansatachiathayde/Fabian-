name: Contributor CI Build

on:
  pull_request:

jobs:
  build:
    name: "Compile All"
    runs-on: ubuntu-20.04
    steps:
      - name: git clone
        uses: actions/checkout@v2
      - id: setup-matrix
        run: echo "::set-output name=matrix::$(jq -c -f .github/workflows/extract-unit-test-split.jq .teamcity/subprojects.json)"
      - name: setup java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11
      - name: assemble
        id: gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean compileAll --no-configuration-cache
      - name: "Comment build scan url"
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })
    outputs:
      matrix: ${{ steps.setup-matrix.outputs.matrix }}
    env:
      # Set the GRADLE_ENTERPRISE_ACCESS_KEY so that Gradle Build Scans are generated
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}

  sanity-check:
    name: "Sanity Check on Linux"
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: git clone
        uses: actions/checkout@v2
      - name: setup java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11
      - name: ./gradlew sanityCheck
        id: gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean sanityCheck --no-configuration-cache
      - name: "Comment build scan url"
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })
    env:
      # Set the GRADLE_ENTERPRISE_ACCESS_KEY so that Gradle Build Scans are generated
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}

  unit-test:
    name: "${{ matrix.bucket.name }} (Unit Test)"
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        bucket: ${{ fromJson(needs.build.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: git clone
        uses: actions/checkout@v2
      - name: setup java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11
      - name: ./gradlew test
        id: gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean ${{ matrix.bucket.tasks }} --no-configuration-cache
    env:
      # Set the GRADLE_ENTERPRISE_ACCESS_KEY so that Gradle Build Scans are generated
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
