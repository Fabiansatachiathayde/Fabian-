/*
 * Copyright 2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// tag::apply-jvm-test-suite[]
plugins {
    id 'java'
    id 'jvm-test-suite'
}
// end::apply-jvm-test-suite[]

version = '1.0.2'
group = 'org.gradle.sample'

repositories {
    mavenCentral()
}

// tag::configure-testing-extension[]
    testing {
        suites {
            integrationTest(JvmTestSuite) {
                dependencies {
                    implementation project
                }

                targets {
                    all {
                        testTask.configure {
                            shouldRunAfter(test)
                        }
                    }
                }
            }
        }
    }

    tasks.named('check') {
        dependsOn(testing.suites.integrationTest)
    }

    // end::configure-testing-extension[]


    def integrationTest = sourceSets.create('integrationTest')

    configurations.getByName(integrationTest.implementationConfigurationName).extendsFrom(configurations.testImplementation)
    configurations.getByName(integrationTest.runtimeOnlyConfigurationName).extendsFrom(configurations.testRuntimeOnly)

    def integrationTestTask = tasks.register('integrationTest', Test) {
        description = 'Runs integration tests.'
        group = 'verification'
        useJUnitPlatform()

        classpath = configurations.getByName(integrationTest.runtimeClasspathConfigurationName) + integrationTest.output
        testClassesDirs = integrationTest.output.classesDirs

        shouldRunAfter(tasks.named('test'))
    }

    tasks.named('check') {
        dependsOn(integrationTestTask)
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

        integrationTestImplementation project
    }
