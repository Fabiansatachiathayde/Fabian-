{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.tasks.diagnostics.PropertyReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.PropertyReportTask.generate(org.gradle.api.Project)",
            "acceptation": "Make PropertyReportTask compatible with configuration caching",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ProjectReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.ProjectReportTask.generate(org.gradle.api.Project)",
            "acceptation": "Make ProjectReportTask compatible with configuration caching",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask.generate(org.gradle.api.Project)",
            "acceptation": "Make AbstractDependencyReportTask compatible with configuration caching",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Class org.gradle.api.plugins.antlr.AntlrTask",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Class is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.getArguments()",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.getOutputDirectory()",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.getTrace()",
            "acceptation": "Converted to Provider API",
            "changes": [
                "METHOD_ADDED_TO_PUBLIC_CLASS",
                "Abstract method has been added to this class"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.isTrace()",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.setArguments(java.util.List)",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.setOutputDirectory(java.io.File)",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.setTrace(boolean)",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.getSourceCompatibility()",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.setSourceCompatibility(java.lang.String)",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.getTargetCompatibility()",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.setTargetCompatibility(java.lang.String)",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method has been removed"
            ]
        }, {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Class org.gradle.api.tasks.compile.AbstractCompile",
            "acceptation": "Needed to bridge old methods",
            "changes": [
                "org.gradle.api.tasks.compile.BridgeAbstractCompile"
            ]
        }, {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Converted to Provider API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.getCompilerArgs()",
            "acceptation": "Migrated to Property",
            "changes": [
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setCompilerArgs(java.util.List)",
            "acceptation": "Migrated to Property",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Copy",
            "member": "Method org.gradle.api.tasks.Copy.getDestinationDir()",
            "acceptation": "Moved to the Provider API",
            "changes": [
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Copy",
            "member": "Method org.gradle.api.tasks.Copy.setDestinationDir(java.io.File)",
            "acceptation": "Moved to the Provider API",
            "changes": [
                "Method has been removed"
            ]
        }
    ]
}
